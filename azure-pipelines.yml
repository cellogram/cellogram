trigger:
- master

variables:
  initVsShell: 'call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\vsdevcmd" -arch=x64'

jobs:

####################
# MSVC
####################

- job: MSVCBuild
  timeoutInMinutes: 0
  strategy:
    matrix:
      windows:
        imageName: 'vs2017-win2016'

  pool:
    vmImage: $(imageName)

  steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-G "Visual Studio 15 2017 Win64" ..'

  - task: VSBuild@1
    inputs:
      solution: 'build/Cellogram.sln'
      vsVersion: '15.0'
      platform: 'x64'
      configuration: 'debug'
      maximumCpuCount: true
      msbuildArgs: '/p:CL_MPCount=8 /p:BuildInParallel=true'
      msbuildArchitecture: 'x64'

####################
# Ninja
####################

- job: NinjaBuild
  timeoutInMinutes: 0
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - script: choco install ninja
    displayName: Install Ninja

  - script: |
      $(initVsShell)
      cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -G Ninja -S . -B build
    displayName: CMake

  - script: $(initVsShell) && cmake --build build
    displayName: Build

  - publish: build/CellogramViewer.exe
    artifact: WindowsBinary

####################
# macOS
####################

- job: ClangBuild
  timeoutInMinutes: 0
  pool:
    vmImage: 'macos-10.13'

  steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-DCMAKE_BUILD_TYPE=Release ..'

  - script: make -j
    workingDirectory: build
    displayName: Build

  - script: cpack
    workingDirectory: build
    displayName: Packaging

  - publish: build/CellogramViewer.dmg
    artifact: MacOSBinary

####################
# Deploy
####################

# Create a new release when the commit contains a tag number
- deployment: GitHubRelease
  dependsOn:
    - NinjaBuild
    - ClangBuild
  pool:
    vmImage: 'Ubuntu-16.04'
  environment: 'deploy'
  strategy:
    # default deployment strategy, more coming...
    runOnce:
      deploy:
        steps:
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: jdumas
              assets: $(Build.ArtifactStagingDirectory)/*
              addChangeLog: false
          - script: dir $(Build.ArtifactStagingDirectory)
          - script: ls $(Build.ArtifactStagingDirectory)
